# INTERFAZ for applying dependency injection in JWT token validation.

from abc import abstractmethod
from typing import Protocol, runtime_checkable


@runtime_checkable
class JWTValidator(Protocol):
    @abstractmethod
    async def validate_jwt(self, token: str) -> dict:
        """
        Authentication and authorization of users by
        validating the JWTs provided to the user with the
        Cognito public keys (JWKs).

        :param token: Token generated by Cognito after a user successfully authenticates.
        :return: A dictionary containing the decoded JWK token data.
        """

    @abstractmethod
    async def get_signing_key(self, token: str) -> dict:
        """
        Obtain the public key (JWKs) from the PyJWK client.
        """
