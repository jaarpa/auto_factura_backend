version: '3.9'

secrets:
  postgres-app-passwd:
    file: .docker/rdbms/secrets/postgres-app-passwd.txt
  postgres-super-passwd:
    file: .docker/rdbms/secrets/postgres-super-passwd.txt

services:
  autofacturabackend:
    image: autofacturabackend
    build:
      context: .
      dockerfile: .docker/Dockerfile
    ports:
      - 8000:8000
    environment:
      - APP_PASSWORD_FILE=/run/secrets/postgres-app-passwd
    env_file:
      - .env
    secrets:
      - postgres-app-passwd
    volumes:
      - ${HOME}/.aws:/home/appuser/.aws
    healthcheck:
      test: curl --fail http://localhost:8000/status || exit 1
      interval: 30s
      retries: 5
      start_period: 5s
      timeout: 10s
    depends_on:
      rdbms:
        condition: service_healthy


  rdbms:
    image: postgres:16.4
    container_name: rdbms
    environment:
      - APP_PASSWORD_FILE=/run/secrets/postgres-app-passwd
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-super-passwd
    env_file:
      - .env
    secrets:
      - postgres-app-passwd
      - postgres-super-passwd
    ports: 
      - ${LOCAL_POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - .docker/rdbms/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    command: ["-c", "port=${POSTGRES_PORT}"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autoinvoice -d autoinvoice"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  rabbitqm:
    image: rabbitmq:management
    container_name: rabbitqm_container
    ports:
      - "5672:5672"  # Puerto para la comunicación AMQP
      - "15672:15672"  # Puerto para el panel de administración web
    environment:
      RABBITQM_DEFAULT_USER : "guest"
      RABBITQM_DEFAULT_PASSWORD: "guest"
    volumes:
      - rabbitqm_data:/var/lib/rabbitqm
  
  mongodb:
    image : mongo:5.0
    container_name: mongo_container
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=gubene
      - MONGO_INITDB_ROOT_PASSWORD=mongorubius
    volumes:
      - mongodata:/data/db


# recordar agregar a gitignore los volumenes
volumes:
  pg_data:
   name: pg_data
  rabbitqm_data:
    name: rabbitqm_data
    driver : local
  mongodata : 
    name: mongodata
  